# encoding: utf-8
# 2020 R2
SetScriptVersion(Version="20.2.221")
system1 = GetSystem(Name="FFF")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}, NumberOfProcessors=4))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)\")(cx-gui-do cx-set-expression-entry \"UDS0: PHI sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"\" . 4))(cx-gui-do cx-activate-item \"UDS0: PHI sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-activate-item "UDS0: PHI sources*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)" 0)(cx-gui-do cx-activate-item "UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)")(cx-gui-do cx-activate-item "UDS0: PHI sources*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)" 0)(cx-gui-do cx-activate-item "X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)")(cx-gui-do cx-activate-item "X Momentum sources*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)" 0)(cx-gui-do cx-activate-item "Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)")(cx-gui-do cx-activate-item "Y Momentum sources*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-enable-apply-button "Fluid")(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*PushButton3(New Surface)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 2))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 2)(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 2)(build-popup-menu)(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\" 1)(cx-gui-do cx-activate-item \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\")(cx-gui-do cx-set-expression-entry \"Y Momentum sources*Table1*Table2*Table2*ExpressionEntry1(1)\" '(\"udf Y_MOM_source::libudf\" . 3))(cx-gui-do cx-activate-item \"Y Momentum sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)" 0)(cx-gui-do cx-activate-item "Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)")(cx-gui-do cx-activate-item "Y Momentum sources*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '())(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-use-window-id 2)(dolly-camera -0.00834298 9.39865e-05 0)(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Banded" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Banded")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 2)(dolly-camera -0.0311618 0.00201619 0)(cx-use-window-id 2)(dolly-camera -0.00382069 -0.00220188 0)(cx-use-window-id 2)(dolly-camera 6.94543e-05 0.000210324 0)(cx-use-window-id 2)(dolly-camera 3.69996e-05 -4.61721e-05 0)(cx-use-window-id 2)(dolly-camera 0.000307113 0.000320008 0)(cx-use-window-id 2)(dolly-camera 4.74826e-05 -1.45519e-11 0)(cx-use-window-id 2)(dolly-camera 7.57724e-06 9.21573e-06 0)(cx-use-window-id 2)(dolly-camera -2.5019e-05 1.49596e-05 0)(cx-use-window-id 2)(dolly-camera 3.05623e-05 -7.27596e-12 0)(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 2)(dolly-camera 3.79756e-05 8.80358e-05 0)(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Contours|contour-1\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command="(cx-use-window-id 2)(dolly-camera -0.00140526 0.00196388 0)(cx-use-window-id 2)(dolly-camera -0.000390559 0.00056773 0)(cx-use-window-id 2)(dolly-camera 8.89823e-05 -7.97437e-05 0)(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 2)(dolly-camera 8.3074e-06 -3.2386e-06 0)(cx-use-window-id 2)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)" #t)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)")(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command='(cx-use-window-id 2)(dolly-camera -7.76425e-05 6.53112e-05 0)(cx-use-window-id 2)(dolly-camera 2.49967e-05 -4.26169e-05 0)(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 2)(dolly-camera 3.05474e-07 -5.4908e-07 0)(cx-use-window-id 2)(dolly-camera -2.6077e-07 2.20949e-07 0)(cx-use-window-id 2)(dolly-camera 4.47035e-08 -6.66769e-08 0)(cx-use-window-id 2)(dolly-camera -7.42674e-05 8.17819e-05 0)(cx-use-window-id 2)(dolly-camera 8.73208e-06 2.44776e-05 0)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command="(cx-use-window-id 2)(dolly-camera -2.31415e-05 1.2875e-05 0)(cx-use-window-id 2)(dolly-camera -6.35833e-05 4.55852e-05 0)(cx-use-window-id 2)(dolly-camera -9.12696e-06 -2.86197e-05 0)(cx-use-window-id 2)(dolly-camera 7.33733e-05 -7.34179e-05 0)(cx-use-window-id 2)(dolly-camera 0.000113606 0.000103742 0)(cx-use-window-id 2)(dolly-camera 0.000147454 0.000286546 0)(cx-use-window-id 2)(dolly-camera 7.62194e-06 -0.000192456 0)(cx-use-window-id 2)(dolly-camera 0.000205889 0.000692671 0)(cx-use-window-id 2)(dolly-camera 0.0128695 0.0386974 0)(cx-use-window-id 2)(dolly-camera -0.00442705 -0.00670243 0)(cx-use-window-id 2)(dolly-camera 0.000263043 0.00730115 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)" #f)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)")(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 2)(dolly-camera 0.000741787 -0.00124784 0)(cx-use-window-id 2)(dolly-camera 9.33558e-06 -2.35615e-05 0)(cx-use-window-id 2)(dolly-camera -0.000158735 -0.000174942 0)(cx-use-window-id 2)(dolly-camera 0.00879888 0.0142728 0)(cx-use-window-id 2)(dolly-camera 0 -0.00203288 0)(cx-use-window-id 2)(dolly-camera -0.000244655 -0.000987743 0)(cx-use-window-id 2)(dolly-camera -0.000124656 -0.000386619 0)(cx-use-window-id 2)(dolly-camera 0.00014317 2.00681e-05 0)(cx-use-window-id 2)(dolly-camera 6.41719e-05 -5.62065e-05 0)(cx-use-window-id 2)(dolly-camera 0.000693291 0.000340157 0)(cx-use-window-id 2)(dolly-camera 0.000169195 0.000229878 0)(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 2)(dolly-camera 0.0348314 0.0217361 0)(cx-use-window-id 2)(dolly-camera 0.00662746 0.00072708 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)")(cx-gui-do cx-activate-item "X Momentum sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\" 1)(cx-gui-do cx-activate-item \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\")(cx-gui-do cx-set-expression-entry \"Y Momentum sources*Table1*Table2*Table2*ExpressionEntry1(1)\" '(\"udf Y_MOM_source::libudf\" . 3))(cx-gui-do cx-activate-item \"Y Momentum sources*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PushButton135(Edit)")(cx-gui-do cx-activate-item "UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-use-window-id 2)(dolly-camera 0.00742102 0.0112947 0)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Named Expressions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 2)(dolly-camera 0.128664 -0.0520548 0)(cx-use-window-id 2)(dolly-camera -0.0977199 0.0767123 0)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 2)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '())(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"momentum_source.c\" \"uds_names.c\" \"poisson_equation.c\" \"ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 0)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 2)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)\" #t)(cx-gui-do cx-activate-item \"User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)\")(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 0)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)" #f)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)")(cx-gui-do cx-set-toggle-button2 "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)" #t)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)")(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)\" 1)(cx-gui-do cx-activate-item \"X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)\")(cx-gui-do cx-set-expression-entry \"X Momentum sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf X_MOM_source::libudf\" . 3))(cx-gui-do cx-activate-item \"X Momentum sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)")(cx-gui-do cx-activate-item "X Momentum sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\" 1)(cx-gui-do cx-activate-item \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\")(cx-gui-do cx-set-expression-entry \"Y Momentum sources*Table1*Table2*Table3*ExpressionEntry1(1)\" '(\"udf new_Y_MOM_source::libudf\" . 3))(cx-gui-do cx-activate-item \"Y Momentum sources*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table5*PushButton2(Edit)")(cx-gui-do cx-activate-item "User Scalar 1 sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Pressure Outlet")(cx-gui-do cx-set-toggle-button2 "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton17(Average Pressure Specification)" #t)(cx-gui-do cx-activate-item "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton17(Average Pressure Specification)")(cx-gui-do cx-set-toggle-button2 "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton17(Average Pressure Specification)" #f)(cx-gui-do cx-activate-item "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton17(Average Pressure Specification)")(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(UDS1: RHO_Q)\" '(\"0.0001\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(UDS1: RHO_Q)\" '(\"0.0001\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(UDS1: RHO_Q)\" '(\"0.0001\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)\"))(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 6)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 7)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inlet (velocity-inlet, id=5)*Edit...")(cx-gui-do cx-enable-apply-button "Velocity Inlet")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Interpreted...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interpreted UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PushButton135(Edit)")(cx-gui-do cx-activate-item "UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)\"))(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 7)(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)\" '( 0))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\" 1)(cx-gui-do cx-activate-item \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\")(cx-gui-do cx-set-expression-entry \"Y Momentum sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf Y_MOM_source::libudf\" . 3))(cx-gui-do cx-activate-item \"Y Momentum sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)\"))(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 7)(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)\" '( 0))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Reports)*PushButton2(Definitions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuMonitorDefinitions*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Report Definitions*Table1*List1(Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"Report Definitions*Table1*List1(Report Definitions)\")(cx-gui-do cx-set-list-selections \"Report Definitions*Table1*List1(Report Definitions)\" '())(cx-gui-do cx-activate-item \"Report Definitions*Table1*List1(Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*List1(Report Definitions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Report Definitions*Table1*List1(Report Definitions)\" '())(cx-gui-do cx-set-list-selections \"Report Definitions*Table1*List1(Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"Report Definitions*Table1*List1(Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*List1(Report Definitions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Report Definitions*Table1*List1(Report Definitions)\" '())(cx-gui-do cx-set-list-selections \"Report Definitions*Table1*List1(Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"Report Definitions*Table1*List1(Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*ButtonBox3*PushButton3(Delete)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(dolly-camera 0.0652006 0.00264745 0)(cx-use-window-id 1)(dolly-camera 0.0398273 0.00147248 0)(cx-use-window-id 1)(dolly-camera -0.0431098 0.00736231 0)(cx-use-window-id 1)(dolly-camera 0.0151565 -0.0203676 0)(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Vectors|vector-1\"))(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*DropDownList1(Vectors of)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Table3*DropDownList1(Vectors of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton2(Custom Vectors)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Vectors*Frame2*DropDownList1(X Component)\" '( 9))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*Frame2*DropDownList1(X Component)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Vectors*Frame2*DropDownList1(X Component)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*Frame2*DropDownList1(X Component)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton1(Add)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame8(Parallel)*Table1*Table3(General)*PushButton1(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame8(Parallel)*Table1*Table3(System)*PushButton1(CPU Info)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Solution)*PushButton1(Methods)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList4(UDS0: PHI)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList4(UDS0: PHI)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton2(Remove)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.RunParallel = False
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}, RunParallel=True, NumberOfProcessors=1))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Compiled UDFs*Frame8*TextEntry1(Library Name)" "libudf_1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton2(Remove)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '())(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton2(Remove)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 1))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0 1))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 1))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton1(Add)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton2(Remove)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*Table1*List1(UDF Libraries)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Compiled UDFs*Frame8*TextEntry1(Library Name)" "libudf")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)\")(cx-gui-do cx-set-expression-entry \"Y Momentum sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"\" . 4))(cx-gui-do cx-activate-item \"Y Momentum sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)" 0)(cx-gui-do cx-activate-item "Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)")(cx-gui-do cx-activate-item "Y Momentum sources*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)" 50)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton1(Add)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Table1*IntegerEntry2" 1)(cx-gui-do cx-activate-item "User-Defined Memory*Table1*IntegerEntry2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Table1*IntegerEntry2" 2)(cx-gui-do cx-activate-item "User-Defined Memory*Table1*IntegerEntry2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Table1*IntegerEntry2" 1)(cx-gui-do cx-activate-item "User-Defined Memory*Table1*IntegerEntry2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Table1*IntegerEntry2" 0)(cx-gui-do cx-activate-item "User-Defined Memory*Table1*IntegerEntry2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Table1*IntegerEntry2" 2)(cx-gui-do cx-activate-item "User-Defined Memory*Table1*IntegerEntry2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton2(Remove)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 1)(handle-key "??")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(cx-use-window-id 1)(handle-key \"??\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 3))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 3))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton1(Add)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton2(Custom Vectors)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Vectors*Frame2*DropDownList1(X Component)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*Frame2*DropDownList1(X Component)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Vectors*Frame2*DropDownList4(Y Component)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*Frame2*DropDownList4(Y Component)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Vectors*Frame2*DropDownList5\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*Frame2*DropDownList5")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Custom Vectors*TextEntry1(Vector Name)" "electric-field")(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton4(Manage)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vector Definitions*List4(Vectors)\" '( 0))(cx-gui-do cx-activate-item \"Vector Definitions*List4(Vectors)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Definitions*PanelButtons*PushButton6(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Definitions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*DropDownList1(Vectors of)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Table3*DropDownList1(Vectors of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)" 500)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*DropDownList3(Color by)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Table3*DropDownList3(Color by)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*DropDownList3(Color by)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Table3*DropDownList3(Color by)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton2(Custom Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Table1*IntegerEntry2" 3)(cx-gui-do cx-activate-item "User-Defined Memory*Table1*IntegerEntry2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"post_processing.c\" \"poisson_equation.c\" \"momentum_source.c\" \"uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton2(Remove)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton1(Add)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton2(Custom Vectors)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Vectors*Frame2*DropDownList2\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*Frame2*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton4(Manage)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vector Definitions*List4(Vectors)\" '( 0))(cx-gui-do cx-activate-item \"Vector Definitions*List4(Vectors)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Definitions*PanelButtons*PushButton6(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Definitions*PanelButtons*PushButton5(Save)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Definitions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Vectors*Frame2*DropDownList5\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*Frame2*DropDownList5")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '())")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton2(Custom Vectors)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Vectors*Frame2*DropDownList5\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*Frame2*DropDownList5")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Custom Vectors*TextEntry1(Vector Name)" "electric-field")(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton4(Manage)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vector Definitions*List4(Vectors)\" '( 0))(cx-gui-do cx-activate-item \"Vector Definitions*List4(Vectors)\")(cx-gui-do cx-activate-item \"Vector Definitions*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton2(Custom Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton2(Custom Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton4(Manage)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Definitions*PanelButtons*PushButton6(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Definitions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Custom Vectors*TextEntry1(Vector Name)\" \"electric-field\")(cx-gui-do cx-set-list-selections \"Custom Vectors*Frame2*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*Frame2*DropDownList2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Vectors*Frame2*DropDownList5\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*Frame2*DropDownList5")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton4(Manage)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vector Definitions*List4(Vectors)\" '( 0))(cx-gui-do cx-activate-item \"Vector Definitions*List4(Vectors)\")(cx-gui-do cx-set-text-entry \"Vector Definitions*TextEntry6(Name)\" \"electric-field\")(cx-gui-do cx-activate-item \"Vector Definitions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Definitions*PanelButtons*PushButton5(Save)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Definitions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '())(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton2(Remove)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
fluentLauncherSettings1.ShowLauncher = False
fluentLauncherSettings1.RunParallel = False
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)" 30)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)" 20)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton1(Add)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1 (Invalid)"))(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton2(Custom Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton4(Manage)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vector Definitions*List4(Vectors)\" '( 0))(cx-gui-do cx-activate-item \"Vector Definitions*List4(Vectors)\")(cx-gui-do cx-activate-item \"Vector Definitions*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*Table1*PushButton5(Edit)")(cx-gui-do cx-activate-item "Adjust Functions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Vectors|vector-1\"))(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*DropDownList3(Color by)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Table3*DropDownList3(Color by)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*DropDownList4\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Table3*DropDownList4")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera 0.0701469 0.00529491 0)(cx-use-window-id 4)(dolly-camera -0.00771934 -0.00668091 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton3(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)" #t)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)")(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera 0.0218177 0.00624707 0)(cx-use-window-id 4)(dolly-camera -0.00523809 -0.00420548 0)(cx-use-window-id 4)(dolly-camera -0.0297976 -0.00965529 0)(cx-use-window-id 4)(dolly-camera -0.00219357 -0.00157762 0)(cx-use-window-id 4)(dolly-camera -0.00154187 -0.00147067 0)(cx-use-window-id 4)(dolly-camera 0.000167727 0.000243943 0)(cx-use-window-id 4)(dolly-camera 0.00199302 -0.000802731 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton3(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)" 99)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)" 100)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Colormap*Table1*Frame4(Colormap)*DropDownList4(Currently Defined)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*DropDownList4(Currently Defined)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Colormap*Table1*Frame3(Labels)*Frame3(Number Format)*DropDownList1(Type)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*Table1*Frame3(Labels)*Frame3(Number Format)*DropDownList1(Type)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Colormap*Table1*Frame3(Labels)*Frame3(Number Format)*DropDownList1(Type)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*Table1*Frame3(Labels)*Frame3(Number Format)*DropDownList1(Type)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Colormap*Table1*Frame3(Labels)*Frame3(Number Format)*IntegerEntry2(Precision)" 3)(cx-gui-do cx-activate-item "Colormap*Table1*Frame3(Labels)*Frame3(Number Format)*IntegerEntry2(Precision)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 2))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera 0.0238839 0.0261472 0)(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1 2))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1 2 3 4))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1 2 3 4 5))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1 2 3 4 5 6))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera 0.000115365 -0.0111582 0)(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 4)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '())")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)" 100)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera -0.00897529 -0.0315175 0)(cx-gui-do cx-set-integer-entry "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)" 1)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)" 2)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)" 3)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)" 4)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 10))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)" #f)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)")(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)" #t)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)")(cx-gui-do cx-set-toggle-button2 "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)" #t)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame4*PushButton1(Outline)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 2 4))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 2 4))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4 5 6))(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)" #f)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)")(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 1))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vector Options*RealEntry2(Scale Head)\" '( 0.5))(cx-gui-do cx-activate-item \"Vector Options*PanelButtons*PushButton1(Apply)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Vector Options*Frame1*CheckButton2(Fixed Length)" #t)(cx-gui-do cx-activate-item "Vector Options*Frame1*CheckButton2(Fixed Length)")(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.2))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.02))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera -0.0601323 0.00943597 0)(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.002))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.001))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton3(Colormap Options)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Colormap*Table1*Frame4(Colormap)*DropDownList4(Currently Defined)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*DropDownList4(Currently Defined)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Colormap*Table1*Frame4(Colormap)*DropDownList4(Currently Defined)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*DropDownList4(Currently Defined)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.002))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)" 10)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Vector Options*Frame1*CheckButton1(In Plane)\" #t)(cx-gui-do cx-activate-item \"Vector Options*Frame1*CheckButton1(In Plane)\")(cx-gui-do cx-set-toggle-button2 \"Vector Options*Frame1*CheckButton1(In Plane)\" #f)(cx-gui-do cx-activate-item \"Vector Options*Frame1*CheckButton1(In Plane)\")(cx-gui-do cx-set-list-selections \"Vector Options*DropDownList3(Color)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Options*DropDownList3(Color)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vector Options*DropDownList3(Color)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Options*DropDownList3(Color)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vector Options*RealEntry2(Scale Head)\" '( 1))(cx-gui-do cx-activate-item \"Vector Options*PanelButtons*PushButton1(Apply)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vector Options*RealEntry2(Scale Head)\" '( 0.2))(cx-gui-do cx-activate-item \"Vector Options*PanelButtons*PushButton1(Apply)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vector Options*RealEntry2(Scale Head)\" '( 0.05))(cx-gui-do cx-activate-item \"Vector Options*PanelButtons*PushButton1(Apply)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vector Options*RealEntry2(Scale Head)\" '( 0.1))(cx-gui-do cx-activate-item \"Vector Options*PanelButtons*PushButton1(Apply)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)" 20)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera 0.00871379 0.0483184 0)(cx-gui-do cx-set-integer-entry "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)" 40)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.005))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)" 50)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.007))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.009))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera 0.0263608 0.000447974 0)(cx-use-window-id 4)(dolly-camera 0.0238848 -0.00408062 0)(cx-use-window-id 4)(dolly-camera -0.0283632 0.0037667 0)(cx-gui-do cx-set-toggle-button2 "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)" #t)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame4*PushButton1(Outline)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)" #t)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)\" #f)(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 2))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-toggle-button2 \"Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)\" #t)(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton4(Partitions)" #t)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton4(Partitions)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)" #f)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)")(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.01))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.05))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.02))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.01))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera 0.0164208 0.00721966 0)(cx-use-window-id 4)(dolly-camera 0.0498965 -0.0238402 0)(cx-use-window-id 4)(dolly-camera -0.0152824 0.0099975 0)(cx-use-window-id 4)(dolly-camera -0.0522543 0.0233611 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton2(Custom Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Vector Options*Frame1*CheckButton2(Fixed Length)" #f)(cx-gui-do cx-activate-item "Vector Options*Frame1*CheckButton2(Fixed Length)")(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Vector Options*Frame1*CheckButton2(Fixed Length)" #t)(cx-gui-do cx-activate-item "Vector Options*Frame1*CheckButton2(Fixed Length)")(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera -0.00458082 -0.0280945 0)(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera -0.00657789 -0.0960107 0)(cx-use-window-id 4)(dolly-camera -0.00252486 0.0191125 0)(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 5))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 10))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4 5 6))(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth\" #t)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera -0.0126521 0.0851339 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)" #f)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)")(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Colormap*Table1*Frame4(Colormap)*DropDownList4(Currently Defined)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*DropDownList4(Currently Defined)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera -0.00821663 -0.0171814 0)(cx-use-window-id 4)(dolly-camera -0.000781506 -0.00400196 0)(cx-use-window-id 4)(dolly-camera -2.76491e-05 -0.000691748 0)(cx-use-window-id 4)(dolly-camera -8.10251e-05 -0.000817697 0)(cx-use-window-id 4)(dolly-camera -1.71363e-05 -0.000132382 0)(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 4)(dolly-camera -2.61664e-05 -6.19585e-05 0)(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton9(Draw Mesh)\" #t)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton9(Draw Mesh)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Quick Edit*Table1*PushButton4(icon_close)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera -2.262e-05 -3.58098e-05 0)(cx-use-window-id 4)(dolly-camera -7.61449e-06 -1.12666e-05 0)(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 4)(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)" #f)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)" #f)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)" #f)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)\" #t)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)\")(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)\" #f)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)\")(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)\" #t)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)\")(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton3(Boundary Values)\" #f)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton3(Boundary Values)\")(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)\" #t)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera 4.10751e-05 9.55557e-05 0)(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)" #f)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '())(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 2))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera 3.3915e-05 -3.48642e-05 0)(cx-use-window-id 4)(dolly-camera 4.36604e-06 -1.23278e-05 0)(cx-use-window-id 4)(dolly-camera 1.59368e-05 6.27229e-05 0)(cx-use-window-id 4)(dolly-camera 3.94657e-05 2.00497e-05 0)(cx-use-window-id 4)(dolly-camera 9.6634e-06 4.94468e-05 0)(cx-use-window-id 4)(dolly-camera -1.54674e-05 4.91759e-05 0)(cx-use-window-id 4)(dolly-camera -2.78652e-05 2.62813e-05 0)(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)\" #t)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera -7.09295e-06 -1.38013e-05 0)(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera -1.98111e-05 -1.52735e-05 0)(cx-use-window-id 4)(handle-key "??")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton3(Boundary Values)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton3(Boundary Values)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Banded" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Banded")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton6(Auto Range)\" #f)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton6(Auto Range)\")(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 2270890))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton7(Clip to Range)" #f)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton7(Clip to Range)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 1.5e+07))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera -4.35784e-05 -3.98408e-06 0)(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Banded" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Banded")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)" #f)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera -8.95411e-05 3.58568e-06 0)(cx-use-window-id 4)(dolly-camera 5.07757e-05 -4.80423e-06 0)(cx-use-window-id 4)(dolly-camera 3.62396e-05 1.39248e-05 0)(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 1.9e+07))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera -8.12858e-06 -6.75221e-05 0)(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 2.09e+07))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera -3.27975e-05 9.63571e-05 0)(cx-use-window-id 4)(dolly-camera 1.40965e-05 2.3366e-05 0)(cx-use-window-id 4)(dolly-camera 8.18074e-06 1.43995e-05 0)(cx-use-window-id 4)(dolly-camera 2.34693e-06 1.0006e-05 0)(cx-use-window-id 4)(dolly-camera 1.68383e-06 5.91767e-06 0)(cx-use-window-id 4)(dolly-camera 6.55651e-07 3.96437e-06 0)(cx-use-window-id 4)(dolly-camera 4.47035e-08 1.55349e-07 0)(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-use-window-id 4)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid_domain) (cx-active-window))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 2.23e+07))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera -7.53105e-05 -5.27673e-05 0)(cx-use-window-id 4)(dolly-camera 0.000123404 -1.71494e-05 0)(cx-use-window-id 4)(dolly-camera -0.000132263 2.77028e-05 0)(cx-use-window-id 4)(dolly-camera 1.59889e-05 -1.92381e-05 0)(cx-use-window-id 4)(cx-use-window-id 4)(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 4)(cx-use-window-id 4)(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 2.25e+07))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 4)(cx-use-window-id 4)(cx-use-window-id 4)(cx-use-window-id 4)(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 2.1e+07))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 2.15e+07))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 4)(cx-use-window-id 4)(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 2.19e+07))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 2.21e+07))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 4)(cx-use-window-id 4)(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 2.22e+07))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-use-window-id 4)(cx-use-window-id 4)(cx-use-window-id 4)(handle-key "??")(cx-use-window-id 4)(handle-key "??")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton5(Global Range)" #f)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton5(Global Range)")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton6(Auto Range)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton6(Auto Range)")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton5(Global Range)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton5(Global Range)")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton6(Auto Range)" #f)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton6(Auto Range)")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton5(Global Range)" #f)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton5(Global Range)")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton5(Global Range)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton5(Global Range)")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton6(Auto Range)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton6(Auto Range)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera -0.00434548 -0.00514309 0)(cx-use-window-id 4)(dolly-camera -0.00152835 -0.00202197 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)" #t)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)")(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera 0.0175257 0.00810742 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)" #f)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)")(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)" #t)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)")(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)" #f)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)")(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Banded" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Banded")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)" #f)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera 0.0413085 0.0125308 0)(cx-use-window-id 4)(dolly-camera -0.0118952 -0.0139355 0)(cx-use-window-id 4)(dolly-camera -0.00324445 -0.0034949 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*PushButton3(New Surface)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuNewSurface*Point...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Point Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)" 99)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)" 98)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)" 99)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)" 100)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*IntegerEntry2(Colormap Size)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera 0.0149208 0.0180717 0)(cx-use-window-id 4)(dolly-camera -0.0104445 8.00355e-10 0)(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera -0.00152419 0.00259705 0)(cx-use-window-id 4)(dolly-camera -0.00175779 0.00222591 0)(cx-use-window-id 4)(dolly-camera -0.00140134 0.00215199 0)(cx-use-window-id 4)(dolly-camera 0.000695594 0.00013543 0)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera 0.000345163 0.000535979 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4 5 6))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-use-window-id 4)(dolly-camera -1.51992e-06 -1.95106e-06 0)(cx-use-window-id 4)(dolly-camera -1.76728e-05 3.26869e-06 0)(cx-use-window-id 4)(dolly-camera -6.23614e-06 2.25696e-06 0)(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton9(Draw Mesh)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton9(Draw Mesh)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 4)(dolly-camera -3.31625e-05 4.50127e-05 0)(cx-use-window-id 4)(dolly-camera 9.40263e-06 6.28376e-05 0)(cx-use-window-id 4)(dolly-camera 2.54735e-05 2.55672e-05 0)(cx-use-window-id 4)(dolly-camera 6.61314e-05 -4.95337e-05 0)(cx-use-window-id 4)(dolly-camera -3.97712e-05 5.95273e-05 0)(cx-use-window-id 4)(dolly-camera 6.24359e-06 -8.196e-06 0)(cx-use-window-id 4)(dolly-camera 0 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
mesh1 = system1.GetContainer(ComponentName="Mesh")
mesh1.Edit()
mesh1.Exit()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 2)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 0)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 0))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table5*PushButton2(Edit)")(cx-gui-do cx-activate-item "UDS1: RHO_Q sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\" 1)(cx-gui-do cx-activate-item \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\")(cx-gui-do cx-set-expression-entry \"UDS0: PHI sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf PHI_source::libudf\" . 3))(cx-gui-do cx-activate-item \"UDS0: PHI sources*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(UDS1: RHO_Q)\" '(\"0.00015\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*Table1*PushButton5(Edit)")(cx-gui-do cx-activate-item "Adjust Functions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)\")(cx-gui-do cx-set-expression-entry \"UDS0: PHI sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"\" . 4))(cx-gui-do cx-set-integer-entry \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\" 0)(cx-gui-do cx-activate-item \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\")(cx-gui-do cx-activate-item \"UDS0: PHI sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command="(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(interior-fluid_domain) (cx-active-window))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Quick Edit*Table1*PushButton4(icon_close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\" 1)(cx-gui-do cx-activate-item \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\")(cx-gui-do cx-set-expression-entry \"UDS0: PHI sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf PHI_source::libudf\" . 3))(cx-gui-do cx-activate-item \"UDS0: PHI sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)" 0)(cx-gui-do cx-activate-item "UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)")(cx-gui-do cx-activate-item "UDS0: PHI sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-activate-item "UDS0: PHI sources*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)" 0)(cx-gui-do cx-activate-item "UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)")(cx-gui-do cx-activate-item "UDS0: PHI sources*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 0)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Solution)*PushButton1(Methods)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Solution Methods*Table1*Table7*CheckButton1(High Order Term Relaxation)" #t)(cx-gui-do cx-activate-item "Solution Methods*Table1*Table7*CheckButton1(High Order Term Relaxation)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table7*PushButton2(Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Relaxation Options*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Solution Methods*Table1*Table7*CheckButton1(High Order Term Relaxation)" #f)(cx-gui-do cx-activate-item "Solution Methods*Table1*Table7*CheckButton1(High Order Term Relaxation)")(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Initialization)*ButtonBox1(Method)*Standard" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Initialization)*ButtonBox1(Method)*Standard")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 2)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|collector (wall, id=9)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(UDS1: RHO_Q)\" '(\"20000\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 0)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)\" 1)(cx-gui-do cx-activate-item \"X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)\")(cx-gui-do cx-set-expression-entry \"X Momentum sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf X_MOM_source::libudf\" . 3))(cx-gui-do cx-activate-item \"X Momentum sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\" 1)(cx-gui-do cx-activate-item \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\")(cx-gui-do cx-set-expression-entry \"Y Momentum sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf Y_MOM_source::libudf\" . 3))(cx-gui-do cx-activate-item \"Y Momentum sources*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 1)(handle-key "??")(cx-use-window-id 1)(handle-key "??")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\" 1)(cx-gui-do cx-activate-item \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\")(cx-gui-do cx-set-expression-entry \"UDS0: PHI sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf PHI_source::libudf\" . 3))(cx-gui-do cx-activate-item \"UDS0: PHI sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(dolly-camera 0.00374258 0.00135533 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(dolly-camera 0.0340063 0.0122582 0)(cx-use-window-id 1)(dolly-camera 0.0366814 0.00708775 0)(cx-use-window-id 1)(dolly-camera -0.0179322 -0.00223447 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(UDS1: RHO_Q)\" '(\"0.00015\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-use-window-id 1)(dolly-camera 0.0182567 -0.0214449 0)(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|collector (wall, id=9)\"))(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)\" '( 0))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)" #t)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)")(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*Frame3*ToggleBox1(Coloring)*Smooth")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton9(Draw Mesh)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton9(Draw Mesh)")(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)" #t)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)" #f)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton9(Draw Mesh)" #f)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton9(Draw Mesh)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(dolly-camera -0.00550655 -0.000263156 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(dolly-camera -0.00856022 0.00658282 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)" #f)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)")(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)" #t)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)")(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(dolly-camera -0.0026785 -0.000273411 0)(cx-use-window-id 1)(dolly-camera -0.00182912 9.61524e-05 0)(cx-use-window-id 1)(dolly-camera -0.00143526 0.000117774 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)" #f)(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*CheckButton1(Log Scale)")(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 1)(handle-key "??")(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)" 0)(cx-gui-do cx-activate-item "X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)")(cx-gui-do cx-activate-item "X Momentum sources*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)" 0)(cx-gui-do cx-activate-item "Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)")(cx-gui-do cx-activate-item "Y Momentum sources*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)" 0)(cx-gui-do cx-activate-item "UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)")(cx-gui-do cx-activate-item "UDS0: PHI sources*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 0)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Table1*IntegerEntry2" 0)(cx-gui-do cx-activate-item "User-Defined Memory*Table1*IntegerEntry2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton2(Remove)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Table1*IntegerEntry2" 3)(cx-gui-do cx-activate-item "User-Defined Memory*Table1*IntegerEntry2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton3(Execute on Demand)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 2)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 0))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(cx-use-window-id 1)(handle-key "control ??")(cx-use-window-id 1)(handle-key "control s")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton1(Add)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)\" 1)(cx-gui-do cx-activate-item \"X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)\")(cx-gui-do cx-set-expression-entry \"X Momentum sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf x_mom_source::libudf\" . 3))(cx-gui-do cx-activate-item \"X Momentum sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)")(cx-gui-do cx-activate-item "X Momentum sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\" 1)(cx-gui-do cx-activate-item \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\")(cx-gui-do cx-set-expression-entry \"Y Momentum sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf y_mom_source::libudf\" . 3))(cx-gui-do cx-activate-item \"Y Momentum sources*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\" 1)(cx-gui-do cx-activate-item \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\")(cx-gui-do cx-set-expression-entry \"UDS0: PHI sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf PHI_source::libudf\" . 3))(cx-gui-do cx-activate-item \"UDS0: PHI sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(UDS1: RHO_Q)\" '(\"0.001\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 1)(handle-key "??")(cx-use-window-id 1)(handle-key "??")(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton3(Execute on Demand)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Execute on Demand*DropDownList1(Execute on Demand)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*DropDownList1(Execute on Demand)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/post_processing.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(dolly-camera 0.0894049 0.0233236 0)(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(UDS1: RHO_Q)\" '(\"0.00015\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(dolly-camera -0.0282865 0.05682 0)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*DropDownList4\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Table3*DropDownList4")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton2(Custom Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton4(Manage)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vector Definitions*List4(Vectors)\" '( 0))(cx-gui-do cx-activate-item \"Vector Definitions*List4(Vectors)\")(cx-gui-do cx-activate-item \"Vector Definitions*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)" #f)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)")(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton3(Execute on Demand)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Execute on Demand*DropDownList1(Execute on Demand)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*DropDownList1(Execute on Demand)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Execute on Demand*DropDownList1(Execute on Demand)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*DropDownList1(Execute on Demand)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)\"))(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table16*ExpressionEntry1(X-Velocity)\" '(\"5\" . 0))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table16*ExpressionEntry1(X-Velocity)\" '(\"4\" . 0))(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 7)(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Pressure Outlet")(cx-gui-do cx-set-toggle-button2 "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)" #t)(cx-gui-do cx-activate-item "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)")(cx-gui-do cx-set-toggle-button2 "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)" #f)(cx-gui-do cx-activate-item "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)")(cx-gui-do cx-set-toggle-button2 "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)" #t)(cx-gui-do cx-activate-item "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)")(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-set-toggle-button2 "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)" #f)(cx-gui-do cx-activate-item "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)")(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ehd.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ehd.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton3(Execute on Demand)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-integer-entry "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)" 500)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors|vector-1"))(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)" 1)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ehd.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ehd.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"ehd.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ehd.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ehd.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ehd.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton3(Execute on Demand)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Execute on Demand*DropDownList1(Execute on Demand)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*DropDownList1(Execute on Demand)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton3(Execute on Demand)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton3(Execute on Demand)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Execute on Demand*DropDownList1(Execute on Demand)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*DropDownList1(Execute on Demand)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Execute on Demand*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)" 0)(cx-gui-do cx-activate-item "PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)")(cx-gui-do cx-activate-item "PHI sources*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)" 0)(cx-gui-do cx-activate-item "X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)")(cx-gui-do cx-activate-item "X Momentum sources*PanelButtons*PushButton1(OK)")(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)" 0)(cx-gui-do cx-activate-item "Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)")(cx-gui-do cx-activate-item "Y Momentum sources*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 2)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)" 1)(cx-gui-do cx-activate-item "X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)")(cx-gui-do cx-activate-item "X Momentum sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(RHO_Q)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(RHO_Q)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(RHO_Q)\" '(\"0.00015\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ehd.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*Table1*PushButton5(Edit)")(cx-gui-do cx-activate-item "Adjust Functions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PushButton135(Edit)")(cx-gui-do cx-activate-item "UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Reset()
setupComponent1.Refresh()
fluentLauncherSettings1.ShowLauncher = False
fluentLauncherSettings1.ShowLauncher = True
fluentLauncherSettings1.Precision = "Double"
fluentLauncherSettings1.ShowLauncher = False
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)" #f)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)")(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Table1*IntegerEntry2" 3)(cx-gui-do cx-activate-item "User-Defined Memory*Table1*IntegerEntry2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-real-entry-list \"UDS Diffusion Coefficients*RealEntry4\" '( 8.895e-12))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Create/Edit Materials*PanelButtons*PushButton1(Close)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-enable-apply-button "Fluid")(cx-gui-do cx-set-toggle-button2 "Fluid*Frame2*Table2*CheckButton6(Source Terms)" #t)(cx-gui-do cx-activate-item "Fluid*Frame2*Table2*CheckButton6(Source Terms)")(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (SST k-omega)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (SST k-omega)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (SST k-omega)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (SST k-omega)"))(cx-gui-do cx-set-toggle-button2 "Viscous Model*Table1*ToggleBox1(Model)*Inviscid" #t)(cx-gui-do cx-activate-item "Viscous Model*Table1*ToggleBox1(Model)*Inviscid")(cx-gui-do cx-set-toggle-button2 "Viscous Model*Table1*ToggleBox1(Model)*Laminar" #t)(cx-gui-do cx-activate-item "Viscous Model*Table1*ToggleBox1(Model)*Laminar")(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-enable-apply-button "Fluid")(cx-gui-do cx-set-toggle-button2 "Fluid*Frame2*Table2*CheckButton6(Source Terms)" #t)(cx-gui-do cx-activate-item "Fluid*Frame2*Table2*CheckButton6(Source Terms)")(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)\"))(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 6)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 7)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 7)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table16*ExpressionEntry1(X-Velocity)\" '(\"5\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|collector (wall, id=9)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(User Scalar 0)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(User Scalar 0)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(User Scalar 0)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(User Scalar 0)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(User Scalar 0)\" '(\"20000\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ehd.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Compiled UDFs*Frame8*CheckButton3(Use Built-In Compiler)" #t)(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*CheckButton3(Use Built-In Compiler)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton1(Add)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)" 500)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*Table6*IntegerEntry16(No  of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-integer-entry "Calculation Activities*Table1*IntegerEntry1(Autosave Every (Iterations))" 20)(cx-gui-do cx-activate-item "Calculation Activities*Table1*IntegerEntry1(Autosave Every (Iterations))")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton2(Remove)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-integer-entry "Calculation Activities*Table1*IntegerEntry1(Autosave Every (Iterations))" 0)(cx-gui-do cx-activate-item "Calculation Activities*Table1*IntegerEntry1(Autosave Every (Iterations))")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Execute Commands"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Iterations)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*Table1*PushButton5(Edit)")(cx-gui-do cx-activate-item "Adjust Functions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton1(Add)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 2)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton4(Memory)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ehd.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|collector (wall, id=9)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(RHO_Q)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(RHO_Q)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(RHO_Q)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(RHO_Q)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(RHO_Q)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(RHO_Q)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(RHO_Q)\" '(\"0.00015\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Calculate")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 1)(handle-key "control ??")(cx-use-window-id 1)(handle-key "control s")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)\" 1)(cx-gui-do cx-activate-item \"X Momentum sources*Table1*IntegerEntry1(Number of X Momentum sources)\")(cx-gui-do cx-set-expression-entry \"X Momentum sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf x_mom_source::libudf\" . 3))(cx-gui-do cx-activate-item \"X Momentum sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\" 1)(cx-gui-do cx-activate-item \"Y Momentum sources*Table1*IntegerEntry1(Number of Y Momentum sources)\")(cx-gui-do cx-set-expression-entry \"Y Momentum sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf y_mom_source::libudf\" . 3))(cx-gui-do cx-activate-item \"Y Momentum sources*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"PHI sources*Table1*IntegerEntry1(Number of PHI sources)\" 1)(cx-gui-do cx-activate-item \"PHI sources*Table1*IntegerEntry1(Number of PHI sources)\")(cx-gui-do cx-set-expression-entry \"PHI sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf PHI_source::libudf\" . 3))(cx-gui-do cx-activate-item \"PHI sources*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)")(cx-gui-do cx-activate-item "Y Momentum sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)")(cx-gui-do cx-activate-item "X Momentum sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-activate-item "PHI sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Colormap*Table1*Frame4(Colormap)*DropDownList4(Currently Defined)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*Table1*Frame4(Colormap)*DropDownList4(Currently Defined)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-real-entry-list \"UDS Diffusion Coefficients*RealEntry4\" '( 5.5e-06))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(PHI)\" '(\"30000\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 0))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-real-entry-list \"UDS Diffusion Coefficients*RealEntry4\" '( 8.8595e-12))(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 0))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-real-entry-list \"UDS Diffusion Coefficients*RealEntry4\" '( 5.5e-06))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)")(cx-gui-do cx-activate-item "X Momentum sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)")(cx-gui-do cx-activate-item "Y Momentum sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-activate-item "PHI sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Pressure Outlet")(cx-gui-do cx-set-toggle-button2 "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)" #t)(cx-gui-do cx-activate-item "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)")(cx-gui-do cx-set-toggle-button2 "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)" #f)(cx-gui-do cx-activate-item "Pressure Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*CheckButton15(Prevent Reverse Flow)")(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(PHI)\" '(\"20000\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(RHO_Q)\" '(\"0.00015\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(RHO_Q)\" '(\"1e-5\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton2(Remove)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-use-window-id 1)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Initialization)*ButtonBox1(Method)*Standard" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Initialization)*ButtonBox1(Method)*Standard")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton1(Add)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings1.ShowLauncher = True
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Precision="Single", EnvPath={}, RunParallel=True))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List2(Selected Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List2(Selected Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton2(Remove)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}, NumberOfProcessors=4))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Physics)*Table1*Table3(Solver)*PushButton1(General)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "General*Table1*Table2(Solver)*ButtonBox1(Type)*Density-Based" #t)(cx-gui-do cx-activate-item "General*Table1*Table2(Solver)*ButtonBox1(Type)*Density-Based")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Function Hooks)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"User-Defined Function Hooks*Table1*PushButton5(Edit)\")(cx-gui-do cx-set-list-selections \"Adjust Functions*Table1*List1(Available Adjust Functions)\" '( 0))(cx-gui-do cx-activate-item \"Adjust Functions*Table1*List1(Available Adjust Functions)\")(cx-gui-do cx-activate-item \"Adjust Functions*Table1*Table3*PushButton1(Add)\")(cx-gui-do cx-activate-item \"Adjust Functions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Function Hooks*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-toggle-button2 "General*Table1*Table2(Solver)*ButtonBox1(Type)*Pressure-Based" #t)(cx-gui-do cx-activate-item "General*Table1*Table2(Solver)*ButtonBox1(Type)*Pressure-Based")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Physics)*Table1*Table3(Solver)*PushButton1(General)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Physics)*Table1*Table3(Solver)*PushButton1(General)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Solution)*PushButton1(Methods)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList2(Pressure)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList2(Pressure)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Momentum)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Momentum)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Momentum)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Momentum)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Momentum)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Momentum)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table12*PushButton1( Default)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList4(PHI)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList4(PHI)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList5(RHO_Q)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList5(RHO_Q)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-toggle-button2 "Solution Methods*Table1*CheckButton6(Warped-Face Gradient Correction)" #t)(cx-gui-do cx-activate-item "Solution Methods*Table1*CheckButton6(Warped-Face Gradient Correction)")(cx-gui-do cx-set-toggle-button2 "Solution Methods*Table1*Table7*CheckButton1(High Order Term Relaxation)" #t)(cx-gui-do cx-activate-item "Solution Methods*Table1*Table7*CheckButton1(High Order Term Relaxation)")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 1)(handle-key "control ??")(cx-use-window-id 1)(handle-key "control s")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
Save(Overwrite=True)
