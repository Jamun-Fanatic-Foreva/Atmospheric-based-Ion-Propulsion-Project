# encoding: utf-8
# 2020 R2
SetScriptVersion(Version="20.2.221")
system1 = GetSystem(Name="FFF")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/usd_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '())(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/usd_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)" #f)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*CheckButton2(Inlet Diffusion)")(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)" 2)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*IntegerEntry1(Number of User-Defined Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/usd_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(Field Functions)*PushButton2(Units)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 4))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*Frame3*List1(Units)\" '( 4))(cx-gui-do cx-activate-item \"Set Units*Frame3*List1(Units)\")(cx-gui-do cx-set-list-selections \"Set Units*Frame3*List1(Units)\" '( 0))(cx-gui-do cx-activate-item \"Set Units*Frame3*List1(Units)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Set Units*ButtonBox4(Set All to)*PushButton1(default)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Set Units*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Define Unit*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 55))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 59))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 60))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-activate-item \"Set Units*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(Field Functions)*PushButton3(Parameters)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton3(More)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuMoreInputParamenters*Use in UDF")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Use Input Parameter for UDF*Table1*Table2*PushButton2(Select)")(cx-gui-do cx-activate-item "Select Input Parameter*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Use Input Parameter for UDF*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Parameters*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-activate-item "UDS0: PHI sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList67(UDS Diffusivity)\" '( 0))(cx-gui-do cx-activate-item \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList67(UDS Diffusivity)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 0))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(Field Functions)*PushButton2(Units)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 112))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 17))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 16))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 15))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 7))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-activate-item \"Set Units*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 0))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-real-entry-list \"UDS Diffusion Coefficients*RealEntry4\" '( 8.8595e-12))(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 0))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-real-entry-list \"UDS Diffusion Coefficients*RealEntry4\" '( 5.5e-06))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 0))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 0)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 0)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)")(cx-gui-do cx-activate-item "Solution Zones*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '())(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"UDF Library Manager*Table1*List1(UDF Libraries)\" '( 0))(cx-gui-do cx-activate-item \"UDF Library Manager*Table1*List1(UDF Libraries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton4(Unload)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/usd_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"usd_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 0))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/usd_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 0)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 0)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)")(cx-gui-do cx-activate-item "Solution Zones*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList2(Solution Zones)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)\")(cx-gui-do cx-set-integer-entry \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\" 1)(cx-gui-do cx-activate-item \"UDS0: PHI sources*Table1*IntegerEntry1(Number of UDS0: PHI sources)\")(cx-gui-do cx-set-expression-entry \"UDS0: PHI sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf PHI_source::libudf\" . 3))(cx-gui-do cx-activate-item \"UDS0: PHI sources*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-enable-apply-button \"Fluid\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal"))(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)\"))(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)\" '( 1))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(UDS0: PHI)\" '(\"0\" . 0))(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|collector (wall, id=9)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(UDS0: PHI)\" '(\"20000\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(UDS0: PHI)\" '(\"20000\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|walls (wall, id=6)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)\" '( 0))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(UDS0: PHI)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(UDS0: PHI)\" '(\"20000\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(cx-use-window-id 1)(handle-key \"??\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '())(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(cx-use-window-id 1)(handle-key \"??\")(cx-use-window-id 1)(handle-key \"??\")(cx-use-window-id 1)(handle-key \"??\")(cx-use-window-id 1)(handle-key \"??\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '())(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(cx-use-window-id 1)(handle-key \"??\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 1))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 1 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 1 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 1))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '())(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '())(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '())(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 2))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '())")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-activate-item "UDS0: PHI sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)\")(cx-gui-do cx-set-expression-entry \"X Momentum sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf X_MOM_source::libudf\" . 3))(cx-gui-do cx-activate-item \"X Momentum sources*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)\")(cx-gui-do cx-set-expression-entry \"Y Momentum sources*Table1*Table2*Table1*ExpressionEntry1(1)\" '(\"udf Y_MOM_source::libudf\" . 3))(cx-gui-do cx-activate-item \"Y Momentum sources*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)\"))(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table16*ExpressionEntry1(X-Velocity)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table16*ExpressionEntry1(X-Velocity)\" '(\"5\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-fluid_domain (interior, id=1)"))(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal"))(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-set-list-selections \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)\" '( 1))(cx-gui-do cx-enable-apply-button \"Wall\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList2(UDS1: RHO_Q)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(UDS1: RHO_Q)\" '(\"1e-5\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '())")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*Frame2*PushButton2( Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Table1*Frame1*List1(Source Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0 1 2 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-enable-apply-button "Fluid")(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table5*PushButton2(Edit)")(cx-gui-do cx-set-integer-entry "UDS1: RHO_Q sources*Table1*IntegerEntry1(Number of UDS1: RHO_Q sources)" 1)(cx-gui-do cx-activate-item "UDS1: RHO_Q sources*Table1*IntegerEntry1(Number of UDS1: RHO_Q sources)")(cx-gui-do cx-set-integer-entry "UDS1: RHO_Q sources*Table1*IntegerEntry1(Number of UDS1: RHO_Q sources)" 0)(cx-gui-do cx-activate-item "UDS1: RHO_Q sources*Table1*IntegerEntry1(Number of UDS1: RHO_Q sources)")(cx-gui-do cx-activate-item "UDS1: RHO_Q sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*Table2*DropDownList4(Flux Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 0)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*PushButton7(Calculate)")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}, NumberOfProcessors=1))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)/file/set-tui-version "20.2"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton5(Scalars)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)" 1)(cx-gui-do cx-activate-item "User-Defined Scalars*Table1*Table3(User-Defined Scalars Options)*IntegerEntry1(UDS Index)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Scalars*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/ion_transport.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/poisson_equation.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/uds_names.c\" \"E:/IIT Bombay - Miscellaneous/ITSP - Simulation Files/Atmospheric-based-Ion-Propulsion-Project/Chen2019 - Implementation - 1/Chen2019 - Implementation - 1_files/user_files/momentum_source.c\") \"Source Files (*.c *.cpp )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*Frame8*PushButton2(Build)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Compiled UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*PushButton135(Edit)\")(cx-gui-do cx-set-list-selections \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\" '( 1))(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*List1(User-Defined Scalar Diffusion)\")(cx-gui-do cx-activate-item \"UDS Diffusion Coefficients*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|fluid_domain (fluid, id=4)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table2*PushButton2(Edit)")(cx-gui-do cx-activate-item "X Momentum sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-enable-apply-button "Fluid")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table3*PushButton2(Edit)")(cx-gui-do cx-activate-item "Y Momentum sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table4*PushButton2(Edit)")(cx-gui-do cx-activate-item "UDS0: PHI sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Frame2*Table3*Frame1*Frame7(Source Terms)*Table1*Table1*Table5*PushButton2(Edit)")(cx-gui-do cx-activate-item "UDS1: RHO_Q sources*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|collector (wall, id=9)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|emitter (wall, id=8)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|emitter (wall, id=8)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table2*ExpressionEntry1(UDS1: RHO_Q)\" '(\"0.0015\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|walls (wall, id=6)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
Save(Overwrite=True)
